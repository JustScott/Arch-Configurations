#!/bin/sh

pulseaudio --start # Start the audio daemon
pamixer -u # Un-mute the speaker

# Set wallpaper
WALLPAPER=$HOME/.wallpaper
[[ -f $WALLPAPER ]] && swaybg --mode fit --image $WALLPAPER &

swayidle -w \
    timeout 600 'waylock' \
    before-sleep 'waylock' &>/dev/null &

# Use Alt on host and Super in Virtual Machines
MODKEY=Alt
if wlr-randr | grep "Virtual-1" &>/dev/null; then
    MODKEY=Super

    # If in a virtual machine, automatically set the resolution
    wlr-randr --output Virtual-1 --mode 1920x1080
fi

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

if which creek &>/dev/null; then
    # Initialize status-bar values 
    update-status-bar --all &

    # Update just the date every second
    while true;    
    do    
        sleep 1
        update-status-bar
    done &

    while true;    
    do    
        sleep 1h
        update-status-bar --weather
    done &

    # Update most of the values every 15 seconds
    while true;    
    do    
        sleep 15
        update-status-bar --volume --brightness --battery --network --bluetooth
    done &

    while true;
    do
        sleep 1
        cat /tmp/status_bar_info
    done | creek \
            -fn monospace:size=16 -hg 28 -nf 0xffffff \
            -nb 0x222222 -ff 0xffffff -fb 0x005577 &
fi

# Custom Shortcuts
riverctl map normal $MODKEY+Shift Return spawn 'foot'
riverctl map normal $MODKEY P spawn 'bemenu-run --fn "monospace [14]"'
riverctl map normal $MODKEY S spawn 'waylock'
riverctl map normal $MODKEY R spawn 'wlr-randr --output eDP-1 --on --pos 0,0 --output DP-4 --off --output DP-3 --off'

riverctl map normal $MODKEY Up spawn 'volume-up'
riverctl map normal $MODKEY Down spawn 'volume-down'
riverctl map normal $MODKEY Right spawn 'brightness-up'
riverctl map normal $MODKEY Left spawn 'brightness-down'

riverctl map normal $MODKEY Y spawn 'ytfzf -D'
riverctl map normal $MODKEY O spawn 'ytfzf -cO -D'


# $MODKEY+Shift+C to close the focused view
riverctl map normal $MODKEY+Shift C close

# $MODKEY+Shift+Q to exit river
riverctl map normal $MODKEY+Shift Q exit

# $MODKEY+J and MODKEY+K to focus the next/previous view in the layout stack
riverctl map normal $MODKEY J focus-view next
riverctl map normal $MODKEY K focus-view previous

# $MODKEY+Shift+J and MODKEY+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $MODKEY+Shift J swap next
riverctl map normal $MODKEY+Shift K swap previous

# $MODKEY+Period and MODKEY+Comma to focus the next/previous output
riverctl map normal $MODKEY Period focus-output next
riverctl map normal $MODKEY Comma focus-output previous

# $MODKEY+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $MODKEY+Shift Period send-to-output next
riverctl map normal $MODKEY+Shift Comma send-to-output previous

# $MODKEY+Return to bump the focused view to the top of the layout stack
riverctl map normal $MODKEY Return zoom

# $MODKEY+H and MODKEY+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal $MODKEY H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $MODKEY L send-layout-cmd rivertile "main-ratio +0.05"

# $MODKEY+Shift+H and MODKEY+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $MODKEY+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal $MODKEY+Shift L send-layout-cmd rivertile "main-count -1"

# $MODKEY + Left Mouse Button to move views
riverctl map-pointer normal $MODKEY BTN_LEFT move-view

# $MODKEY + Right Mouse Button to resize views
riverctl map-pointer normal $MODKEY BTN_RIGHT resize-view

# $MODKEY + Middle Mouse Button to toggle float
riverctl map-pointer normal $MODKEY BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # $MODKEY+[1-9] to focus tag [0-8]
    riverctl map normal $MODKEY $i set-focused-tags $tags

    # $MODKEY+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $MODKEY+Shift $i set-view-tags $tags

    # $MODKEY+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $MODKEY+Control $i toggle-focused-tags $tags

    # $MODKEY+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $MODKEY+Shift+Control $i toggle-view-tags $tags
done

# $MODKEY+0 to focus all tags
# $MODKEY+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $MODKEY 0 set-focused-tags $all_tags
riverctl map normal $MODKEY+Shift 0 set-view-tags $all_tags

# $MODKEY+Space to toggle float
riverctl map normal $MODKEY Space toggle-float

# $MODKEY+F to toggle fullscreen
riverctl map normal $MODKEY F toggle-fullscreen

# $MODKEY+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $MODKEY+Shift Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $MODKEY+Shift Right send-layout-cmd rivertile "main-location right"
riverctl map normal $MODKEY+Shift Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $MODKEY+Shift Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# $MODKEY+F11 to enter passthrough mode
riverctl map normal $MODKEY F11 enter-mode passthrough

# $MODKEY+F11 to return to normal mode
riverctl map passthrough $MODKEY F11 enter-mode normal

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 6 &
